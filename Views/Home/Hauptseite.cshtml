<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
<br />
<br />
<div class="text-center">
    <h1 class="display-4">SmartStall</h1>
</div>
<br />
<br />
<div class="custom-control custom-switch text-left ml-3">
    <input type="checkbox" class="custom-control-input" id="customSwitch1" onchange="handleCheckboxChangeBenachrichtigung(this)">
    <label class="custom-control-label" for="customSwitch1">Benachrichtigung</label>
</div>
<div class="custom-control custom-switch text-left ml-3">
    <input type="checkbox" class="custom-control-input" id="customSwitch2" onchange="handleCheckboxChangeBelüftung(this)">
    <label class="custom-control-label" for="customSwitch2">Belüftung</label>
</div>


<!----------------------------------------Ammoniak----------------------------------------------->
<div>
    <div class="container mt-5">
        <div class="row align-items-center">
            <div class="col-auto">
                <h2 class="mb-0 align-self-center">Ammoniak</h2>
            </div>
            <div class="col-auto ml-auto">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title" style="margin-bottom: 0;">Aktueller Wert</h5>
                        <p class="card-text display-4" id="wertAmmoniak"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="btn-group ml-3" role="group" aria-label="Chart View">
        <button id="tagBtnAmmoniak" type="button" class="btn btn-secondary">Tag</button>
        <button id="wocheBtnAmmoniak" type="button" class="btn btn-secondary">Woche</button>
    </div>
    <canvas id="lineChartAmmoniak"></canvas>
</div>
<!---------------------------------------------------------------------------------------------->
<br />
<br />
<!----------------------------------------Luftfeuchtigkeit-------------------------------------->
<div>
    <div class="container mt-5">
        <div class="row align-items-center">
            <div class="col-auto">
                <h2 class="mb-0 align-self-center">Luftfeuchtigkeit</h2>
            </div>
            <div class="col-auto ml-auto">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title" style="margin-bottom: 0;">Aktueller Wert</h5>
                        <p class="card-text display-4" id="wertLuftfeuchtigkeit"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="btn-group ml-3" role="group" aria-label="Chart View">
        <button id="tagBtnLuftfeuchtigkeit" type="button" class="btn btn-secondary">Tag</button>
        <button id="wocheBtnLuftfeuchtigkeit" type="button" class="btn btn-secondary">Woche</button>
    </div>
    <canvas id="lineChartLuftfeuchtigkeit"></canvas>
</div>
<!---------------------------------------------------------------------------------------->
<br />
<br />
<!----------------------------------------Temperatur-------------------------------------->
<div class="container mt-5">
    <div class="row align-items-center">
        <div class="col-auto">
            <h2 class="mb-0 align-self-center">Temperatur</h2>
        </div>
        <div class="col-auto ml-auto">
            <div class="card text-center">
                <div class="card-body">
                    <h5 class="card-title" style="margin-bottom: 0;">Aktueller Wert</h5>
                    <p class="card-text display-4" id="wertTemperatur"></p>
                </div>
            </div>
        </div>
    </div>
</div>

    <div class="btn-group ml-3" role="group" aria-label="Chart View">
        <button id="tagBtnTemperatur" type="button" class="btn btn-secondary">Tag</button>
        <button id="wocheBtnTemperatur" type="button" class="btn btn-secondary">Woche</button>
    </div>
    <canvas id="lineChartTemperatur"></canvas>
<!---------------------------------------------------------------------------------------------->
<br />
<br />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<script>

    var lineChartAmmoniak;
    var optionsAmmoniak;
    var dataAmmoniak;
    var lineChartLuftfeuchtigkeit;
    var optionsLuftfeuchtigkeit;
    var dataLuftfeuchtigkeit;
    var lineChartTemperatur;
    var optionsTemperatur;
    var dataTemperatur;

    var ammoniakButtonTag = true;
    var luftfeuchtigkeitButtonTag = true;
    var temperaturButtonTag = true;

    var ammoniakButtonWoche = false;
    var luftfeuchtigkeitButtonWoche = false;
    var temperaturButtonWoche = false;

    var benachrichtigungflag;
    var belüftungflag;

    var ammoniakCurrent;
    var temperaturCurrent;
    var luftfeuchtigkeitCurrent;

    $(document).ready(init);

    function init(){

        $.ajax({
            url: 'GetBelüftungUndBenachrichtigung',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
               
                belüftungflag = data.Belüftung;
                document.getElementById("customSwitch2").checked = data.Belüftung;

                benachrichtigungflag = data.Benachrichtigung;
                document.getElementById("customSwitch1").checked = data.Benachrichtigung;
            },
            error: function (error) {
                console.error('Fehler beim Abrufen der Daten:', error);
            }
        });

        initializeDiagrams();

        var timer = setInterval(updatedFunction, 1000 * 60 * 1);
    }

    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    async function initializeDiagrams(){
        buildAmmoniakDiagramTag();
        var buttonAmmoniakWoche = document.getElementById('wocheBtnAmmoniak');
        buttonAmmoniakWoche.addEventListener('click', handleButtonAmmoniakWocheClick);
        var buttonAmmoniakTag = document.getElementById('tagBtnAmmoniak');
        buttonAmmoniakTag.addEventListener('click', handleButtonAmmoniakTagClick);
        await delay(1000); // 1 Sekunde warten

        buildLuftfeuchtigkeitDiagramTag();
        var buttonLuftfeuchtigkeitWoche = document.getElementById('wocheBtnLuftfeuchtigkeit');
        buttonLuftfeuchtigkeitWoche.addEventListener('click', handleButtonLuftfeuchtigkeitWocheClick);
        var buttonLuftfeuchtigkeitTag = document.getElementById('tagBtnLuftfeuchtigkeit');
        buttonLuftfeuchtigkeitTag.addEventListener('click', handleButtonLuftfeuchtigkeitTagClick);
        await delay(1000); // 1 Sekunde warten

        buildTemperaturDiagramTag();
        var buttonTemperaturWoche = document.getElementById('wocheBtnTemperatur');
        buttonTemperaturWoche.addEventListener('click', handleButtonTemperaturWocheClick);
        var buttonTemperaturTag = document.getElementById('tagBtnTemperatur');
        buttonTemperaturTag.addEventListener('click', handleButtonTemperaturTagClick);
    }

    //hier habe ich ein asnyc entfernt
    function handleCheckboxChangeBenachrichtigung(checkbox) {
        benachrichtigungflag = checkbox.checked; // true, wenn angehakt, false, wenn ausgehakt
        $.ajax({
            url: 'SetAttributes', // Ersetzen Sie 'ControllerName' durch den Namen Ihres Controllers
            type: 'POST',
            data: { attribute: "Benachrichtigung", flag: checkbox.checked }, // Beispielwerte für 'attribute' und 'flag'
            success: function (response) {
                console.log('Erfolgreich:', response);
            },
            error: function (xhr, status, error) {
                console.error('Fehler:', error);
            }
        });
    }

    function handleCheckboxChangeBelüftung(checkbox) {
        belüftungflag = checkbox.checked; // true, wenn angehakt, false, wenn ausgehakt

        $.ajax({
            url: 'SetAttributes', // Ersetzen Sie 'ControllerName' durch den Namen Ihres Controllers
            type: 'POST',
            data: { attribute: "Belüftung", flag: checkbox.checked }, // Beispielwerte für 'attribute' und 'flag'
            success: function (response) {
                console.log('Erfolgreich:', response);
            },
            error: function (xhr, status, error) {
                console.error('Fehler:', error);
            }
        });
    }

    function buildAmmoniakDiagramTag() {
        $.ajax({
            url: 'GetAmmoniak',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var ammoniakWerteTagAktuellDictionary = {};

                for (var key in data.ammoniakWerteTagAktuell) {
                    if (data.ammoniakWerteTagAktuell.hasOwnProperty(key)) {
                        ammoniakWerteTagAktuellDictionary[key] = data.ammoniakWerteTagAktuell[key];
                    }
                }

                createAmmoniakDiagramTag(ammoniakWerteTagAktuellDictionary);

            },
            error: function (error) {
                console.error('Fehler beim Abrufen der Daten:', error);
            }
        });

        function createAmmoniakDiagramTag(dataDictionary) {

            var labels = [];
            var dataValues = [];

            // Daten aus dem Dictionary extrahieren und in Arrays umwandeln
            for (var key in dataDictionary) {
                if (dataDictionary.hasOwnProperty(key)) {
                    labels.push(key);         // Zeitstempel als Label
                    dataValues.push(dataDictionary[key]);  // Dazugehörige Daten
                }
            }

            var dataAmmoniakValues = parseDictionary(labels, dataValues);
            var minDay = minDayFunctionDay(labels[0]);
            var maxDay = maxDayFunctionDay(labels[0]);

            ammoniakCurrent = parseFloat(dataValues[dataValues.length - 1].replace(',', '.'));
            document.getElementById('wertAmmoniak').innerHTML = ammoniakCurrent

            if (ammoniakCurrent > 20) {
                var meinElement = document.getElementById("wertAmmoniak");
                meinElement.style.color = "red";
            } 
            else if (ammoniakCurrent < 15) {
                var meinElement = document.getElementById("wertAmmoniak");
                meinElement.style.color = "green";
            } 
            else
            {
                var meinElement = document.getElementById("wertAmmoniak");
                meinElement.style.color = "green";
            }

            dataAmmoniak = {
                datasets: [
                    {
                        label: "Ammoniak-Aktuell",
                        data: dataAmmoniakValues,
                        fill: true,
                        borderColor: "rgb(13, 13, 13)",
                        tension: 0.2
                    },
                    {
                        label: "Ammoniakgrenze",
                        data: [
                            {x: minDay, y: 20},
                            {x: maxDay, y: 20},
                        ],
                        fill: true,
                        borderColor: "rgb(240, 2, 2)",
                        tension: 0.1
                    }
                ]
            };

            optionsAmmoniak = {
                responsive: true,
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            unit: 'hour'
                        },
                        min: minDay,
                        max: maxDay,
                        title: {
                            display: true,
                            text: 'Uhrzeit'
                        },
                    },
                    y: {
                        suggestedMin: 5,
                        suggestedMax: 30,
                        title: {
                            display: true,
                            text: 'Ammoniakgehalt in ppm'
                        }
                    }
                }
            };

            lineChartAmmoniak = new Chart($("#lineChartAmmoniak"), {
                type: "line",
                data: dataAmmoniak,
                options: optionsAmmoniak
            });
        }
    }

    function parseDictionary(labels, dataValues) {

        var dataPoints = []

        for (var i = 0; i < dataValues.length; i++) {
            var dataValue = parseFloat(dataValues[i].replace(',', '.'));
            var currentTimestamp = new Date(labels[i]);
            currentTimestamp.setHours(currentTimestamp.getHours() + 1);
            dataPoints.push(createDataPoint(currentTimestamp.toISOString(), dataValue))
        }

        return dataPoints;
    }

    function createDataPoint(xValue, yValue) {

        var originalTimestamp = xValue;
        var dateObject = new Date(originalTimestamp);
        dateObject.setHours(dateObject.getHours() + 1);

        // Die toISOString()-Methode gibt ein ISO-8601-konformes Datum zurück
        // Sie erhalten das gewünschte Format durch Abschneiden der Zeichen am Ende
        var zeitstempel = dateObject.toISOString().slice(0, -5);

        if (zeitstempel.includes("00:00:00")) {
            dateObject.setDate(dateObject.getDate() - 1);
            zeitstempel = dateObject.toISOString().slice(0, -5);
        }

        return { x: zeitstempel, y: parseFloat(yValue) };
    }

    function minDayFunctionDay(xvalue) {
        var originalTimestamp = xvalue;
        var dateObject = new Date(originalTimestamp);
        //dateObject.setDate(dateObject.getDate() + 1);
        var zeitstempel = dateObject.toISOString().slice(0, -13) + "00:00:00";
        return zeitstempel;
    }

    function minDayFunctionWeek(xvalue) {
        var originalTimestamp = xvalue;
        var dateObject = new Date(originalTimestamp);
        dateObject.setDate(dateObject.getDate() + 1);
        var zeitstempel = dateObject.toISOString().slice(0, -13) + "00:00:00";

        return zeitstempel;
    }

    function maxDayFunctionDay(xvalue) {
        var originalTimestamp = xvalue;
        var dateObject = new Date(originalTimestamp);
        //dateObject.setDate(dateObject.getDate() + 1);
        var zeitstempel = dateObject.toISOString().slice(0, -13) + "23:59:59";
        return zeitstempel;
    }

    function maxDayFunctionWeek(xvalue) {
        var originalTimestamp = xvalue;
        var dateObject = new Date(originalTimestamp);
        dateObject.setHours(dateObject.getHours() + 1);
        var zeitstempel = dateObject.toISOString().slice(0, -13) + "23:59:59";
        return zeitstempel;
    }

    function handleButtonAmmoniakWocheClick() {

        ammoniakButtonTag = false;
        ammoniakButtonWoche = true;

        Chart.getChart('lineChartAmmoniak').destroy();

        $.ajax({
            url: 'GetAmmoniak',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var ammoniakWerteWocheAktuellDictionary = {};

                for (var key in data.ammoniakWerteWocheAktuell) {
                    if (data.ammoniakWerteWocheAktuell.hasOwnProperty(key)) {
                        ammoniakWerteWocheAktuellDictionary[key] = data.ammoniakWerteWocheAktuell[key];
                    }
                }

                createAmmoniakDiagramWoche(ammoniakWerteWocheAktuellDictionary);

            },
            error: function (error) {
                console.error('Fehler beim Abrufen der Daten:', error);
            }
        });
    }

    function handleButtonAmmoniakTagClick(){

        ammoniakButtonTag = true;
        ammoniakButtonWoche = false;

        Chart.getChart('lineChartAmmoniak').destroy();
        buildAmmoniakDiagramTag();
    }

        function createAmmoniakDiagramWoche(dataDictionary) {

            var labels = [];
            var dataValues = [];

            // Daten aus dem Dictionary extrahieren und in Arrays umwandeln
            for (var key in dataDictionary) {
                if (dataDictionary.hasOwnProperty(key)) {
                    labels.push(key);         // Zeitstempel als Label
                    dataValues.push(dataDictionary[key]);  // Dazugehörige Daten
                }
            }

            var dataAmmoniakValues = parseDictionary(labels, dataValues);
            var minDay = minDayFunctionWeek(labels[0]);
            var maxDay = maxDayFunctionWeek(labels[labels.length-1]);

        ammoniakCurrent = parseFloat(dataValues[dataValues.length - 1].replace(',', '.'));
        document.getElementById('wertAmmoniak').innerHTML = ammoniakCurrent

        if (ammoniakCurrent > 20) {
                var meinElement = document.getElementById("wertAmmoniak");
                meinElement.style.color = "red";
            }
        else if (ammoniakCurrent < 15) {
                var meinElement = document.getElementById("wertAmmoniak");
                meinElement.style.color = "green";
            }
            else 
            {
                var meinElement = document.getElementById("wertAmmoniak");
                meinElement.style.color = "green";
            }

        dataAmmoniak = {
                datasets: [
                    {
                        label: "Ammoniak-Aktuell",
                        data: dataAmmoniakValues,
                        fill: true,
                        borderColor: "rgb(13, 13, 13)",
                        tension: 0.2
                    },
                    {
                        label: "Ammoniakgrenze",
                        data: [
                            { x: minDay, y: 20 },
                            { x: maxDay, y: 20 },
                        ],
                        fill: true,
                        borderColor: "rgb(240, 2, 2)",
                        tension: 0.1
                    }
                ]
            };

            optionsAmmoniak = {
                responsive: true,
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            unit: 'day'
                        },
                        min: minDay,
                        max: maxDay,
                        title: {
                            display: true,
                            text: 'Tag'
                        },
                    },
                    y: {
                        suggestedMin: 5,
                        suggestedMax: 30,
                        title: {
                            display: true,
                            text: 'Ammoniakgehalt in ppm'
                        }
                    }
                }
            };

            lineChartAmmoniak = new Chart($("#lineChartAmmoniak"), {
                type: "line",
                data: dataAmmoniak,
                options: optionsAmmoniak
            });
        }

        function buildLuftfeuchtigkeitDiagramTag() {
            $.ajax({
                url: 'GetLuftfeuchtigkeit',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    var luftfeuchtigkeitWerteTagAktuellDictionary = {};

                    for (var key in data.luftfeuchtigkeitWerteTagAktuell) {
                        if (data.luftfeuchtigkeitWerteTagAktuell.hasOwnProperty(key)) {
                            luftfeuchtigkeitWerteTagAktuellDictionary[key] = data.luftfeuchtigkeitWerteTagAktuell[key];
                        }
                    }

                    createLuftfeuchtigkeitDiagramTag(luftfeuchtigkeitWerteTagAktuellDictionary);

                },
                error: function (error) {
                    console.error('Fehler beim Abrufen der Daten:', error);
                }
            });
        }

        function createLuftfeuchtigkeitDiagramTag(dataDictionary) {

            var labels = [];
            var dataValues = [];

            // Daten aus dem Dictionary extrahieren und in Arrays umwandeln
            for (var key in dataDictionary) {
                if (dataDictionary.hasOwnProperty(key)) {
                    labels.push(key);         // Zeitstempel als Label
                    dataValues.push(dataDictionary[key]);  // Dazugehörige Daten
                }
            }

            var dataLuftfeuchtigkeitValues = parseDictionary(labels, dataValues);
            var minDay = minDayFunctionDay(labels[0]);
            var maxDay = maxDayFunctionDay(labels[0]);

        luftfeuchtigkeitCurrent = parseFloat(dataValues[dataValues.length - 1].replace(',', '.'));
            document.getElementById('wertLuftfeuchtigkeit').innerHTML = luftfeuchtigkeitCurrent

            if (luftfeuchtigkeitCurrent > 60) {
                var meinElement = document.getElementById("wertLuftfeuchtigkeit");
                meinElement.style.color = "red";
            }
            else if (luftfeuchtigkeitCurrent < 60) {
                var meinElement = document.getElementById("wertLuftfeuchtigkeit");
                meinElement.style.color = "green";
            }
            else {
                var meinElement = document.getElementById("wertLuftfeuchtigkeit");
                meinElement.style.color = "green";
            }

            dataLuftfeuchtigkeit = {
                datasets: [
                    {
                        label: "Luftfeuchtigkeit-Aktuell",
                        data: dataLuftfeuchtigkeitValues,
                        fill: true,
                        borderColor: "rgb(13, 13, 13)",
                        tension: 0.2
                    },
                    {
                        label: "Luftfeuchtigkeitgrenze",
                        data: [
                            { x: minDay, y: 60 },
                            { x: maxDay, y: 60 },
                        ],
                        fill: true,
                        borderColor: "rgb(240, 2, 2)",
                        tension: 0.1
                    }
                ]
            };

            optionsLuftfeuchtigkeit = {
                responsive: true,
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            unit: 'hour'
                        },
                        min: minDay,
                        max: maxDay,
                        title: {
                            display: true,
                            text: 'Uhrzeit'
                        },
                    },
                    y: {
                        suggestedMin: 5,
                        suggestedMax: 30,
                        title: {
                            display: true,
                            text: 'Luftfeuchtigkeit in Prozent'
                        }
                    }
                }
            };

            lineChartLuftfeuchtigkeit = new Chart($("#lineChartLuftfeuchtigkeit"), {
                type: "line",
                data: dataLuftfeuchtigkeit,
                options: optionsLuftfeuchtigkeit
            });
        }

    function handleButtonLuftfeuchtigkeitWocheClick() {

        luftfeuchtigkeitButtonTag = false;
        luftfeuchtigkeitButtonWoche = true;

        Chart.getChart('lineChartLuftfeuchtigkeit').destroy();

        $.ajax({
            url: 'GetLuftfeuchtigkeit',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var luftfeuchtigkeitWerteWocheAktuellDictionary = {};

                for (var key in data.luftfeuchtigkeitWerteWocheAktuell) {
                    if (data.luftfeuchtigkeitWerteWocheAktuell.hasOwnProperty(key)) {
                        luftfeuchtigkeitWerteWocheAktuellDictionary[key] = data.luftfeuchtigkeitWerteWocheAktuell[key];
                    }
                }

                createLuftfeuchtigkeitDiagramWoche(luftfeuchtigkeitWerteWocheAktuellDictionary);

            },
            error: function (error) {
                console.error('Fehler beim Abrufen der Daten:', error);
            }
        });
    }

    function createLuftfeuchtigkeitDiagramWoche(dataDictionary) {

        var labels = [];
        var dataValues = [];

        // Daten aus dem Dictionary extrahieren und in Arrays umwandeln
        for (var key in dataDictionary) {
            if (dataDictionary.hasOwnProperty(key)) {
                labels.push(key);         // Zeitstempel als Label
                dataValues.push(dataDictionary[key]);  // Dazugehörige Daten
            }
        }

        var dataLuftfeuchtigkeitValues = parseDictionary(labels, dataValues);
        var minDay = minDayFunctionWeek(labels[0]);
        var maxDay = maxDayFunctionWeek(labels[labels.length - 1]);

        luftfeuchtigkeitCurrent = parseFloat(dataValues[dataValues.length - 1].replace(',', '.'));
        document.getElementById('wertLuftfeuchtigkeit').innerHTML = luftfeuchtigkeitCurrent

        if (luftfeuchtigkeitCurrent > 60) {
            var meinElement = document.getElementById("wertLuftfeuchtigkeit");
            meinElement.style.color = "red";
        } 
        else if (luftfeuchtigkeitCurrent < 60) {
            var meinElement = document.getElementById("wertLuftfeuchtigkeit");
            meinElement.style.color = "green";
        }
        else {
            var meinElement = document.getElementById("wertLuftfeuchtigkeit");
            meinElement.style.color = "green";
        }

        dataLuftfeuchtigkeit = {
            datasets: [
                {
                    label: "Luftfeuchtigkeit-Aktuell",
                    data: dataLuftfeuchtigkeitValues,
                    fill: true,
                    borderColor: "rgb(13, 13, 13)",
                    tension: 0.2
                },
                {
                    label: "Luftfeuchtigkeitgrenze",
                    data: [
                        { x: minDay, y: 60 },
                        { x: maxDay, y: 60 },
                    ],
                    fill: true,
                    borderColor: "rgb(240, 2, 2)",
                    tension: 0.1
                }
            ]
        };

        optionsLuftfeuchtigkeit = {
            responsive: true,
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'day'
                    },
                    min: minDay,
                    max: maxDay,
                    title: {
                        display: true,
                        text: 'Tag'
                    },
                },
                y: {
                    suggestedMin: 5,
                    suggestedMax: 30,
                    title: {
                        display: true,
                        text: 'Luftfeuchtigkeit in Prozent'
                    }
                }
            }
        };

        lineChartLuftfeuchtigkeit = new Chart($("#lineChartLuftfeuchtigkeit"), {
            type: "line",
            data: dataLuftfeuchtigkeit,
            options: optionsLuftfeuchtigkeit
        });
    }

    function handleButtonLuftfeuchtigkeitTagClick() {

        luftfeuchtigkeitButtonTag = true;
        luftfeuchtigkeitButtonWoche = false;

        Chart.getChart('lineChartLuftfeuchtigkeit').destroy();
        buildLuftfeuchtigkeitDiagramTag();
    }

    function buildTemperaturDiagramTag(){
        $.ajax({
            url: 'GetTemperatur',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var temperaturWerteTagAktuellDictionary = {};

                for (var key in data.temperaturWerteTagAktuell) {
                    if (data.temperaturWerteTagAktuell.hasOwnProperty(key)) {
                        temperaturWerteTagAktuellDictionary[key] = data.temperaturWerteTagAktuell[key];
                    }
                }

                createTemperaturDiagramTag(temperaturWerteTagAktuellDictionary);

            },
            error: function (error) {
                console.error('Fehler beim Abrufen der Daten:', error);
            }
        });
    }

    function createTemperaturDiagramTag(dataDictionary) {

        var labels = [];
        var dataValues = [];

        // Daten aus dem Dictionary extrahieren und in Arrays umwandeln
        for (var key in dataDictionary) {
            if (dataDictionary.hasOwnProperty(key)) {
                labels.push(key);         // Zeitstempel als Label
                dataValues.push(dataDictionary[key]);  // Dazugehörige Daten
            }
        }

        var dataTemperaturValues = parseDictionary(labels, dataValues);
        var minDay = minDayFunctionDay(labels[0]);
        var maxDay = maxDayFunctionDay(labels[0]);

        temperaturCurrent = parseFloat(dataValues[dataValues.length - 1].replace(',', '.'));
        document.getElementById('wertTemperatur').innerHTML = temperaturCurrent

        if (temperaturCurrent > 25) {
            var meinElement = document.getElementById("wertTemperatur");
            meinElement.style.color = "red";
        }
        else if (temperaturCurrent < 24) {
            var meinElement = document.getElementById("wertTemperatur");
            meinElement.style.color = "green";
        }
        else {
            var meinElement = document.getElementById("wertTemperatur");
            meinElement.style.color = "green";
        }

        dataTemperatur = {
            datasets: [
                {
                    label: "Temperatur-Aktuell",
                    data: dataTemperaturValues,
                    fill: true,
                    borderColor: "rgb(13, 13, 13)",
                    tension: 0.2
                },
                {
                    label: "Temperaturgrenze",
                    data: [
                        { x: minDay, y: 25 },
                        { x: maxDay, y: 25 },
                    ],
                    fill: true,
                    borderColor: "rgb(240, 2, 2)",
                    tension: 0.1
                }
            ]
        };

        optionsTemperatur = {
            responsive: true,
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'hour'
                    },
                    min: minDay,
                    max: maxDay,
                    title: {
                        display: true,
                        text: 'Uhrzeit'
                    },
                },
                y: {
                    suggestedMin: 5,
                    suggestedMax: 30,
                    title: {
                        display: true,
                        text: 'Temperatur in Grad Celsius'
                    }
                }
            }
        };

        lineChartAmmoniak = new Chart($("#lineChartTemperatur"), {
            type: "line",
            data: dataTemperatur,
            options: optionsTemperatur
        });
    }

    function handleButtonTemperaturWocheClick(){

        temperaturButtonTag = false;
        temperaturButtonWoche = true;

        Chart.getChart('lineChartTemperatur').destroy();

        $.ajax({
            url: 'GetTemperatur',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var temperaturWerteWocheAktuellDictionary = {};

                for (var key in data.temperaturWerteWocheAktuell) {
                    if (data.temperaturWerteWocheAktuell.hasOwnProperty(key)) {
                        temperaturWerteWocheAktuellDictionary[key] = data.temperaturWerteWocheAktuell[key];
                    }
                }

                createTemperaturDiagramWoche(temperaturWerteWocheAktuellDictionary);

            },
            error: function (error) {
                console.error('Fehler beim Abrufen der Daten:', error);
            }
        });
    }

    function createTemperaturDiagramWoche(dataDictionary){
        var labels = [];
        var dataValues = [];

        // Daten aus dem Dictionary extrahieren und in Arrays umwandeln
        for (var key in dataDictionary) {
            if (dataDictionary.hasOwnProperty(key)) {
                labels.push(key);         // Zeitstempel als Label
                dataValues.push(dataDictionary[key]);  // Dazugehörige Daten
            }
        }

        var dataTemperaturValues = parseDictionary(labels, dataValues);
        var minDay = minDayFunctionWeek(labels[0]);
        var maxDay = maxDayFunctionWeek(labels[labels.length - 1]);

        temperaturCurrent = parseFloat(dataValues[dataValues.length - 1].replace(',', '.'));
        document.getElementById('wertTemperatur').innerHTML = temperaturCurrent

        if (temperaturCurrent > 25) {
            var meinElement = document.getElementById("wertTemperatur");
            meinElement.style.color = "red";
        }
        else if (temperaturCurrent < 24) {
            var meinElement = document.getElementById("wertTemperatur");
            meinElement.style.color = "green";
        }
        else
        {
            var meinElement = document.getElementById("wertTemperatur");
            meinElement.style.color = "green";
        }

        dataTemperatur = {
            datasets: [
                {
                    label: "Temperatur-Aktuell",
                    data: dataTemperaturValues,
                    fill: true,
                    borderColor: "rgb(13, 13, 13)",
                    tension: 0.2
                },
                {
                    label: "Temperaturgrenze",
                    data: [
                        { x: minDay, y: 25 },
                        { x: maxDay, y: 25 },
                    ],
                    fill: true,
                    borderColor: "rgb(240, 2, 2)",
                    tension: 0.1
                }
            ]
        };

        optionsTemperatur = {
            responsive: true,
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'day'
                    },
                    min: minDay,
                    max: maxDay,
                    title: {
                        display: true,
                        text: 'Tag'
                    },
                },
                y: {
                    suggestedMin: 5,
                    suggestedMax: 30,
                    title: {
                        display: true,
                        text: 'Temperatur Grad Celsius'
                    }
                }
            }
        };

        lineChartTemperatur = new Chart($("#lineChartTemperatur"), {
            type: "line",
            data: dataTemperatur,
            options: optionsTemperatur
        });
    }

    function handleButtonTemperaturTagClick()
    {
        temperaturButtonTag = true;
        temperaturButtonWoche = false;

        Chart.getChart('lineChartTemperatur').destroy();
        buildTemperaturDiagramTag();
    }

    async function updatedFunction(){

        //Update Ammoniak
        if (ammoniakButtonTag){
            handleButtonAmmoniakTagClick();
        }
        else{
            handleButtonAmmoniakWocheClick();
        }
        await delay(1000); // 1 Sekunde warten

        //Update Luftfeuchtigkeit
        if (luftfeuchtigkeitButtonTag)
        {
            handleButtonLuftfeuchtigkeitTagClick();
        }
        else
        {
            handleButtonLuftfeuchtigkeitWocheClick();
        }
        await delay(1000); // 1 Sekunde warten

        //Update Temperatur
        if (temperaturButtonTag)
        {
            handleButtonTemperaturTagClick();
        }
        else
        {
            handleButtonTemperaturWocheClick();
        }

    }

</script>
